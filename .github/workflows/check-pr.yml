name: Check PR project validity

on:
  pull_request:
    branches: [ "main", "develop" ]

concurrency: 
  cancel-in-progress: true
  group: ${{ github.workflow }}-${{ github.ref }}

jobs:
  validate-pr-title:
    name: Validate PR title
    runs-on: ubuntu-latest
    steps:
      - uses: amannn/action-semantic-pull-request@v4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          types: |
            fix
            feature
            internal
            release
            breaking
          scopes: |
            ui
            web
            pb
            api
            config

  check-build:
    name: Check project build
    runs-on: ubuntu-latest
    timeout-minutes: 10
    env:
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
    steps:
      # https://github.com/actions/checkout
      - name: Checkout Repo
        uses: actions/checkout@v4.1.5
        with:
            fetch-depth: 2

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20
      
      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store

      - name: NodeLinker
        shell: bash
        run: |
          pnpm config set node-linker hoisted

      - name: 🐞 Install Dependencies
        run: pnpm install

      - name: 🏗️ Build
        run: pnpm build
        env:
          API_ORIGIN: http://localhost:3000

      - name: 🧪 Run tests
        run: pnpm test

