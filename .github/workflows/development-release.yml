name: 'Development release'

on:
  workflow_dispatch:
  push:
    branches:
      - develop

jobs:
  prepare:
    name: "Prepare"
    runs-on: ubuntu-latest
    outputs:
      repo: ${{ steps.filter.outputs.repo }}
      web: ${{ steps.filter.outputs.web }}
    steps:
      - uses: n1hility/cancel-previous-runs@v3
        with: 
          token: ${{ secrets.GITHUB_TOKEN }}
          workflow: development-release.yml

      - name: üöô Checkout 
        uses: actions/checkout@v4.1.5
        with:
          fetch-depth: 0
  
      - name: üìç Prepare filter
        uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            repo:
              - '.github/**'
              - 'package-lock.json'
            web:
              - 'apps/web/**'
              - 'packages/api/**'
              - 'packages/ui/**'
              - 'packages/schema/**'
              - 'packages/database/**'
              - 'packages/email-templates/**'

  check-build:
    name: Check project build
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: prepare
    env:
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
    steps:
      # https://github.com/actions/checkout
      - name: Checkout Repo
        uses: actions/checkout@v4.1.5
        with:
            fetch-depth: 2

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20
      
      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store

      - name: üêû Install Dependencies
        run: pnpm install

      - name: üèóÔ∏è Build
        run: pnpm build
        env:
          DATABASE_URL: 'just-a-placeholder'

  deploy-web:
    name: "üìç Deploy web to dokku"
    needs: [prepare, check-build]
    runs-on: ubuntu-latest
    # if: needs.prepare.outputs.web == 'true' || needs.prepare.outputs.repo == 'true'
    steps:
      - name: Cloning repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          lfs: true

      - name: Set up qemu
        uses: docker/setup-qemu-action@v2

      - name: Set up docker buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to docker hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ondrejlangr/najit-najist-web:dev-${{ github.sha }}
          build-args: |
            TURBO_TEAM=${{ secrets.TURBO_TEAM }}
            TURBO_TOKEN=${{ secrets.TURBO_TOKEN }}
          file: ./apps/web/Dockerfile

      - name: Push to dokku
        uses: dokku/github-action@master
        with:
          git_remote_url: 'ssh://dokku@najitnajist.cz:22/dev-web'
          ssh_private_key: ${{ secrets.SSH_PRIVATE_KEY }}
          deploy_docker_image: ondrejlangr/najit-najist-web:dev-${{ github.sha }}
          branch: 'development'
          git_push_flags: '--force'
          